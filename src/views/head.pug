doctype html
html
    head
        title Go
        link(rel='stylesheet', href='css/main.css' type='text/css')
        link(rel='stylesheet', href='css/login.css' type='text/css')
        link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous")
        script(src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous")
        script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous")
        script(src="https://unpkg.com/axios/dist/axios.min.js")
        script(src="/socket.io/socket.io.js")
        script.
          const socket = io()
          socket.on('connect', function () {
            console.log('-socket connected-', socket.id);
          })
          socket.on('serviceMessage', function (msg) {
            console.log('-service Message-', window.location.href)
            msg = JSON.parse(msg);
            if ((window.location.href === 'http://localhost:3000/' || window.location.href === 'http://127.0.0.1:3000/')
              && msg.roomName === 'global') {
              console.log('-msg-', msg)
              const messageList = document.getElementById('message-list');
              const li = document.createElement('li');
              li.style.cssText = 'font-size:11px; list-style-type: none; padding-left: 5px;';
              const text = document.createTextNode(msg.entry.event);
              li.appendChild(text);
              messageList.appendChild(li);
            }
          });
          socket.on('message', function (message) {
            const parsedMessage = JSON.parse(message)
            console.log('-parsed-', parsedMessage)
            const messageList = document.getElementById('message-list');
            const msg = `${parsedMessage.entry.user.name}: ${parsedMessage.entry.message}`
            const li = document.createElement('li');
            li.style.cssText = 'font-size:11px; list-style-type: none; padding-left: 5px;';
            const text = document.createTextNode(msg);
            if (messageList.children.length > 21) {
              messageList.removeChild(messageList.firstChild)
            }
            li.appendChild(text);
            messageList.appendChild(li);
            console.log('-length-', messageList.children.length)
          })

